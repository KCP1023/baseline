function generateRandomString() {
 return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
}

async function signStringWithMetaMask(account, stringToSign) {
    if (typeof window.ethereum !== 'undefined') {
        try {
            const signedString = await window.ethereum.request({
            method: 'personal_sign',
            params: [stringToSign, account],
            });
            return signedString;
        } catch (error) {
            console.error('Error signing string:', error);
            throw error;
        }
    } else {
        throw new Error('MetaMask is not installed.');
    }
}

function storeSignedString(signedString) {
    localStorage.setItem('signedString', signedString);
}

async function generateAndSignString() {
    const randomString = generateRandomString();
    console.log('Random String:', randomString);

    if (typeof window.ethereum !== 'undefined') {
        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
        const account = accounts[0];
        try {
            const signedString = await signStringWithMetaMask(account, randomString);
            console.log('Signed String:', signedString);
            storeSignedString(signedString);
            alert('String signed successfully!');
        } catch (error) {
            console.error('Error during signing process:', error);
            alert('An error occurred during signing. Please try again.');
        }
    } else {
        alert('Please install MetaMask to use this feature.');
    }
}

export default { generateAndSignString };
